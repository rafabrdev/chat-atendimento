version: '3.8'

services:
  # Backend (com MongoDB Atlas)
  backend:
    build: ./backend
    ports:
      - "3001:3001"
    environment:
      # MongoDB Atlas Connection (substitua com suas credenciais)
      MONGODB_URI: ${MONGODB_URI}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key-here}
      PORT: 3001
      NODE_ENV: ${NODE_ENV:-development}
      # Storage
      USE_S3: ${USE_S3:-false}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_REGION: ${AWS_REGION:-us-east-1}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - redis
    networks:
      - app-network

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      WATCHPACK_POLLING: true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # Redis para cache de sessões
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network

  # Nginx (opcional - para simular produção localmente)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    profiles:
      - production

volumes:
  redis-data:

networks:
  app-network:
    driver: bridge
